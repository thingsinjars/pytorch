{"name":"_compile.py","path":"torch/_compile.py","content":{"structured":{"description":"","items":[{"id":"b34f36e0-2c01-42e4-b76d-ef4c2734d89a","ancestors":["af15bfb9-043f-4c6a-8659-e132a042f707"],"type":"function","name":"inner","location":{"offset":" ","indent":12,"start":21,"insert":22},"code":"def inner(*args, **kwargs):\n            import torch._dynamo\n\n            return torch._dynamo.disable(fn, recursive)(*args, **kwargs)","params":[],"returns":true,"skip":false,"stripped":"import torch._dynamo\n\n            return torch._dynamo.disable(fn, recursive)(*args, **kwargs)","length":4,"comment":{"description":"disable the dynamic computation graph recording for a given function `fn` and its nested calls recursively by wrapping them with `torch._dynamo.disable(fn, recursive)`.","params":[],"returns":{"type":"`torch.Tensor`.","description":"the result of calling the provided function `fn` with the passed arguments and keyword arguments after disabling dynamic computation tracing using `torch._dynamo.disable(fn, recursive)`.\n\n\t* The function returns a tuple containing the result of calling the provided function `fn` with the passed arguments `*args` and keyword arguments `**kwargs`.\n\t* The returned value is a dynamo-enabled version of the original function call.\n\t* The `torch._dynamo` module is imported to enable dynamo-based tracing of the function.\n"}}}]}}}